
manifest {
    name = 'vib-singlecell-nf/vsn-pipelines'
    description = 'A repository of pipelines for single-cell data in Nextflow DSL2'
    homePage = 'https://github.com/vib-singlecell-nf/vsn-pipelines'
    version = '0.19.0'
    mainScript = 'main.nf'
    defaultBranch = 'master'
    nextflowVersion = '!>=20.04.1' // with ! prefix, stop execution if current version does not match required version.
}

params {
    // These parameters are passed to all processes
    global {
        project_name = ''
        outdir = ''
		rundir = ''
		sampleName = ''
		standAlone = 'false'
        qsubaccount = ''
        qsubemail = ''
    }
    misc {
        test {
            enabled = false
        }
    }
}

process {
    executor = 'local'

    withLabel: qsub {
        executor = 'pbs'
    }

    withLabel: local {
        executor = 'local'
    }
}

profiles {

    standard {
        process.executor = 'local'
    }
    qsub {
        process.executor = 'pbs'
    }
    docker {
        docker.enabled = true
        docker.runOptions = "-i -v ${HOME}:${HOME}"
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.runOptions = '-B /ddn1/vol1/staging/leuven/stg_00002/,/staging/leuven/stg_00002/'
    }
    vpcx {
        docker.enabled = true
        docker.runOptions = "-i -v /app:/app -v /root/:/root"
        docker.registry = "itx-aiv.artifactrepo.jnj.com/"
    }
    min {
        includeConfig 'conf/min.config'
    }
    test {
        includeConfig 'conf/test.config'
    }

    // workflow-specific profiles:

    star {
        includeConfig 'src/star/star.config'
    }
    bbknn {
        if(min && min.enabled) {
            includeConfig 'src/scanpy/conf/min.config'
            includeConfig 'src/scanpy/conf/bbknn.config'
        } else {
            includeConfig 'src/utils/conf/h5ad_concatenate.config'
            includeConfig 'src/scanpy/scanpy.config'
            includeConfig 'src/scanpy/conf/bbknn.config'
        }
    }
    mnncorrect {
        if(min && min.enabled) {
            includeConfig 'src/scanpy/conf/min.config'
            includeConfig 'src/scanpy/conf/mnncorrect.config'
        } else {
            includeConfig 'src/utils/conf/h5ad_concatenate.config'
            includeConfig 'src/scanpy/scanpy.config'
            includeConfig 'src/scanpy/conf/mnncorrect.config'
        }
    }
    popscle {
        includeConfig 'src/popscle/popscle.config'
    }
    harmony {
        if(min && min.enabled) {
            includeConfig 'src/scanpy/conf/min.config'
            includeConfig 'src/harmony/harmony.config'
        } else {
            includeConfig 'src/utils/conf/h5ad_concatenate.config'
            includeConfig 'src/scanpy/scanpy.config'
            includeConfig 'src/harmony/harmony.config'
        }
    }
    bbknn_scenic {
        includeConfig 'src/scanpy/scanpy.config'
        includeConfig 'src/scanpy/conf/bbknn.config'
        includeConfig 'src/scenic/scenic.config'
    }
    bbknn_scenic_multiruns {
        includeConfig 'src/scanpy/scanpy.config'
        includeConfig 'src/scanpy/conf/bbknn.config'
        includeConfig 'src/scenic/scenic.config'
        includeConfig 'src/scenic/conf/multi_runs.config'
    }
    single_sample {
        if(min && min.enabled) {
            includeConfig 'src/scanpy/conf/min.config'
        } else {
            includeConfig 'src/scanpy/scanpy.config'
        }
    }
    multi_sample {
        includeConfig 'src/scanpy/scanpy.config'
    }
    single_sample_scenic {
        includeConfig 'src/scanpy/scanpy.config'
        includeConfig 'src/scenic/scenic.config'
    }
    single_sample_scrublet {
        includeConfig 'src/scanpy/scanpy.config'
        includeConfig 'src/scrublet/scrublet.config'
    }
    scenic {
        includeConfig 'src/scenic/scenic.config'
    }
    scenic_append_only {
        includeConfig 'src/scenic/conf/append.config'
    }
    scenic_multiruns {
        includeConfig 'src/scenic/scenic.config'
        includeConfig 'src/scenic/conf/multi_runs.config'
    }
    single_sample_star {
        includeConfig 'src/star/star.config'
        includeConfig 'src/scanpy/scanpy.config'
    }
    nemesh {
        includeConfig 'conf/nemesh.config'
        includeConfig 'src/fastp/fastp.config'
        includeConfig 'src/picard/picard.config'
        includeConfig 'src/dropseqtools/dropseqtools.config'
        includeConfig 'src/star/star.config'
        includeConfig 'src/dropletutils/dropletutils.config'
    }

    // scanpy profiles:

    scanpy_filter {
        includeConfig 'src/scanpy/conf/scanpy_filter.config'
    }
    scanpy_data_transformation {
        includeConfig 'src/scanpy/conf/data_transformation.config'
    }
    scanpy_normalization {
        includeConfig 'src/scanpy/conf/normalization.config'
    }
    scanpy_regress_out {
        includeConfig 'src/scanpy/conf/regress_out.config'
    }


    // cellranger profiles:

    cellranger {
        includeConfig 'src/cellranger/cellranger.config'
    }
    cellranger_libraries {
        includeConfig 'src/cellranger/cellranger.config'
        includeConfig 'src/cellranger/conf/cellranger_libraries.config'
    }
    cellranger_count {
        includeConfig 'src/cellranger/conf/base.config'
        includeConfig 'src/cellranger/conf/count.config'
    }
    cellranger_count_libraries {
        includeConfig 'src/cellranger/conf/base.config'
        includeConfig 'src/cellranger/conf/count.config'
        includeConfig 'src/cellranger/conf/count_libraries.config'
    }
    cellranger_count_metadata {
        includeConfig 'src/cellranger/conf/base.config'
        includeConfig 'src/cellranger/conf/count.config'
        includeConfig 'src/cellranger/conf/count_metadata.config'
    }

    // scrublet profiles

    scrublet {
        includeConfig 'src/scrublet/scrublet.config'
    }

    // data profiles:

    tenx {
        includeConfig 'src/channels/conf/tenx_cellranger_mex.config'
    }
    tenx_atac {
        includeConfig 'src/channels/conf/tenx_atac_cellranger_mex.config'
    }
    tenx_h5 {
        includeConfig 'src/channels/conf/tenx_cellranger_h5.config'
    }
    h5ad {
        includeConfig 'src/channels/conf/h5ad.config'
    }
    loom {
        includeConfig 'src/channels/conf/loom.config'
    }
    tsv {
        includeConfig 'src/channels/conf/tsv.config'
    }
    csv {
        includeConfig 'src/channels/conf/csv.config'
    }
    sra {
        includeConfig 'src/channels/conf/sra.config'
        includeConfig 'src/utils/conf/sra_metadata.config'
        includeConfig 'src/sratoolkit/sratoolkit.config'
    }
    seurat_rds {
        includeConfig 'src/channels/conf/seurat_rds.config'
    }

    // metadata profiles:

    dm6 {
        includeConfig 'src/scenic/conf/min/tfs/fly-v0.0.1.config'
        includeConfig 'conf/genomes/dm6.config'
    }

    hg38 {
        includeConfig 'src/scenic/conf/min/tfs/human-v0.0.1.config'
        includeConfig 'conf/genomes/hg38.config'
    }

    hg19 {
        includeConfig 'src/scenic/conf/min/tfs/human-v0.0.1.config'
        includeConfig 'conf/genomes/hg19.config'
    }

    mm10 {
        includeConfig 'src/scenic/conf/min/tfs/mouse-v0.0.1.config'
        includeConfig 'conf/genomes/mm10.config'
    }

    // feature profiles:

    pcacv {
        includeConfig 'src/pcacv/pcacv.config'
    }

    // scenic profiles:

    scenic_use_cistarget_motifs {
        includeConfig "src/scenic/conf/min/dbs/cistarget-motifs-${params.global.species}-${params.global.genome.assembly}-v0.0.1.config"
    }

    scenic_use_cistarget_tracks {
        includeConfig "src/scenic/conf/min/dbs/cistarget-tracks-${params.global.species}-${params.global.genome.assembly}-v0.0.1.config"
    }

    scenic_test {
        includeConfig 'src/scenic/conf/test.config'
    }

    // utility profiles:

    utils_sample_annotate {
        includeConfig 'src/utils/conf/sample_annotate.config'
    }
    utils_cell_annotate {
        includeConfig 'src/utils/conf/cell_annotate.config'
    }
    utils_cell_filter {
        includeConfig 'src/utils/conf/cell_filter.config'
    }

    // test profiles:

    test__single_sample {
        includeConfig 'conf/test__single_sample.config'
    }
    test__single_sample_scenic {
        includeConfig 'conf/genomes/hg38.config'
        includeConfig 'conf/test__single_sample_scenic.config'
    }
    test__single_sample_scrublet {
        includeConfig 'conf/test__single_sample_scrublet.config'
    }
    test__scenic {
        includeConfig 'conf/genomes/hg38.config'
        includeConfig 'conf/test__scenic.config'
    }
    test__scenic_multiruns {
        includeConfig 'conf/genomes/hg38.config'
        includeConfig 'conf/test__scenic_multiruns.config'
    }
    test__single_sample_scenic_multiruns {
        includeConfig 'conf/genomes/hg38.config'
        includeConfig 'conf/test__single_sample_scenic_multiruns.config'
    }
    test__bbknn {
        includeConfig 'src/utils/conf/h5ad_concatenate.config'
        includeConfig 'conf/test__bbknn.config'
    }
    test__bbknn_scenic {
        includeConfig 'conf/genomes/hg38.config'
        includeConfig 'src/utils/conf/h5ad_concatenate.config'
        includeConfig 'conf/test__bbknn_scenic.config'
    }
    test__harmony {
        includeConfig 'src/utils/conf/h5ad_concatenate.config'
        includeConfig 'conf/test__harmony.config'
    }
    test__mnncorrect {
        includeConfig 'src/utils/conf/h5ad_concatenate.config'
        includeConfig 'conf/test__mnncorrect.config'
    }


    /*
        *** ATAC-seq profiles ***
    */

    cellranger_atac {
        includeConfig 'src/cellranger-atac/cellranger-atac.config'
    }
    cellranger_atac_count {
        includeConfig 'src/cellranger-atac/conf/base.config'
        includeConfig 'src/cellranger-atac/conf/count.config'
    }
    cellranger_atac_count_metadata {
        includeConfig 'src/cellranger-atac/conf/base.config'
        includeConfig 'src/cellranger-atac/conf/count.config'
        includeConfig 'src/cellranger-atac/conf/count_metadata.config'
    }
    cistopic {
        includeConfig 'src/cistopic/cistopic.config'
    }

	/*
		*** R pipeline profiles ***
	*/

	seurat_hashtags_citeseq {
		includeConfig 'src/Seurat/conf/container.config'
		includeConfig 'src/Seurat/conf/HTO.config'
		includeConfig 'conf/R_rnaseq.config'
		includeConfig 'src/Seurat/conf/ADT.config'
	}

	seurat_citeseq {
		includeConfig 'src/Seurat/conf/container.config'
		includeConfig 'src/Seurat/conf/input.config'
		includeConfig 'conf/R_rnaseq.config'
		includeConfig 'src/Seurat/conf/ADT.config'
	}

	seurat_hashtags_rnaseq {
		includeConfig 'src/Seurat/conf/container.config'
		includeConfig 'src/Seurat/conf/input.config'
		includeConfig 'src/Seurat/conf/HTO.config'
		includeConfig 'conf/R_rnaseq.config'
	}

	rnaseq {
		includeConfig 'conf/R_rnaseq.config'
	}
}


timeline {
    enabled = true
    file = "${params.global.outdir}/nextflow_reports/execution_timeline.html"
}
report {
    enabled = true
    file = "${params.global.outdir}/nextflow_reports/execution_report.html"
}
trace {
    enabled = true
    file = "${params.global.outdir}/nextflow_reports/execution_trace.txt"
}
dag {
    enabled = true
    file = "${params.global.outdir}/nextflow_reports/pipeline_dag.svg"
}
min {
    enabled = false
}

//includeConfig 'src/utils/conf/scope.config'
//includeConfig 'src/utils/utils.config' // utilities config
includeConfig 'conf/generic.config'
